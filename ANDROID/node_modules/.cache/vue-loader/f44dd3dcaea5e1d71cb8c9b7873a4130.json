{"remainingRequest":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/skynet/Documents/MedicalChain/ANDROID/src/views/Register.vue?vue&type=template&id=63ae9146","dependencies":[{"path":"/home/skynet/Documents/MedicalChain/ANDROID/src/views/Register.vue","mtime":1621520778832},{"path":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1616796459000},{"path":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Cgk8ZGl2IHN0eWxlPSJmb250LWZhbWlseTpJbnRlciIgY2xhc3M9Im10LTUiPgoKCQk8ZGl2IGNsYXNzPSJtYi0zIHB4LTYgcHQtNCI+CgkJCTxpbWcgY2xhc3M9InctMjQgbWItMiIgc3JjPSIuLi9hc3NldHMvbG9nby5wbmciPgoJCQk8cCBjbGFzcz0idGV4dC14bCBmb250LWJvbGQiPkZvcm11bGlyIFBlbmRhZnRhcmFuPC9wPgoJCQk8cCBjbGFzcz0idGV4dC1zbSB0ZXh0LWdyYXktNTAwIj5TaWxhaGthbiBtZW5naXNpIGRhdGEgZGliYXdhaDwvcD4KCQk8L2Rpdj4KCgkJPGRpdiBjbGFzcz0icHgtMiI+CgkJCTwhLS0gTmFtYSBEZXBhbiAtLT4KCQkJPGlvbi1pdGVtPgoJCQkJPGlvbi1sYWJlbCBwb3NpdGlvbj0iZmxvYXRpbmciPk5hbWEgRGVwYW48L2lvbi1sYWJlbD4KCQkJCTxpb24taW5wdXQgQElvbklucHV0PSJwZW5nZ3VuYS5uYW1hX2RlcGFuID0gJGV2ZW50LnRhcmdldC52YWx1ZSI+PC9pb24taW5wdXQ+CgkJCTwvaW9uLWl0ZW0+CgoJCQk8IS0tIE5hbWEgQmVsYWthbmcgLS0+CgkJCTxpb24taXRlbT4KCQkJCTxpb24tbGFiZWwgcG9zaXRpb249ImZsb2F0aW5nIj5OYW1hIEJlbGFrYW5nPC9pb24tbGFiZWw+CgkJCQk8aW9uLWlucHV0IEBJb25JbnB1dD0icGVuZ2d1bmEubmFtYV9iZWxha2FuZyA9ICRldmVudC50YXJnZXQudmFsdWUiPjwvaW9uLWlucHV0PgoJCQk8L2lvbi1pdGVtPgoKCQkJPGRpdiBjbGFzcz0icHgtMyBtdC0zIj4KCQkJCTxpb24tYnV0dG9uIEBjbGljaz0icmVnaXN0ZXIoKSI+RGFmdGFyPC9pb24tYnV0dG9uPgoJCQk8L2Rpdj4KCQk8L2Rpdj4KCQk8aW1nIGNsYXNzPSJ3LTY0IGFic29sdXRlIHJpZ2h0LTAgYm90dG9tLTAgLW1iLTMiIHNyYz0iLi4vYXNzZXRzL2RvY3RvcnNfYmxvY2tjaGFpbi5wbmciPgoJPC9kaXY+Cg=="},{"version":3,"sources":["/home/skynet/Documents/MedicalChain/ANDROID/src/views/Register.vue"],"names":[],"mappings":";CACC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE1C,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;GAC1B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;GAC/C,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;GACpD,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClE,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;GAChB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;GAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACprB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;GAChF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;GAEV,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;GACnD,CAAC,CAAC,CAAC,CAAC,CAAC;EACN,CAAC,CAAC,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CACzF,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/skynet/Documents/MedicalChain/ANDROID/src/views/Register.vue","sourceRoot":"","sourcesContent":["<template>\n\t<div style=\"font-family:Inter\" class=\"mt-5\">\n\n\t\t<div class=\"mb-3 px-6 pt-4\">\n\t\t\t<img class=\"w-24 mb-2\" src=\"../assets/logo.png\">\n\t\t\t<p class=\"text-xl font-bold\">Formulir Pendaftaran</p>\n\t\t\t<p class=\"text-sm text-gray-500\">Silahkan mengisi data dibawah</p>\n\t\t</div>\n\n\t\t<div class=\"px-2\">\n\t\t\t<!-- Nama Depan -->\n\t\t\t<ion-item>\n\t\t\t\t<ion-label position=\"floating\">Nama Depan</ion-label>\n\t\t\t\t<ion-input @IonInput=\"pengguna.nama_depan = $event.target.value\"></ion-input>\n\t\t\t</ion-item>\n\n\t\t\t<!-- Nama Belakang -->\n\t\t\t<ion-item>\n\t\t\t\t<ion-label position=\"floating\">Nama Belakang</ion-label>\n\t\t\t\t<ion-input @IonInput=\"pengguna.nama_belakang = $event.target.value\"></ion-input>\n\t\t\t</ion-item>\n\n\t\t\t<div class=\"px-3 mt-3\">\n\t\t\t\t<ion-button @click=\"register()\">Daftar</ion-button>\n\t\t\t</div>\n\t\t</div>\n\t\t<img class=\"w-64 absolute right-0 bottom-0 -mb-3\" src=\"../assets/doctors_blockchain.png\">\n\t</div>\n</template>\n\n<script type=\"text/javascript\">\n\t\n\tconst NodeRSA = require('node-rsa');\n\tconst axios = require('axios');\n\tconst key = new NodeRSA({b: 512});\n\timport { crypto } from '@/function.js';\n\n\texport default{\n\t\tdata(){\n\t\t\treturn{\n\t\t\t\tpengguna : {\n\t\t\t\t\tnama_depan : \"\",\n\t\t\t\t\tnama_belakang : \"\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tmethods : {\n\n\t\t\tregister(){\n\t\t\t\tlet data = {'nama_depan' : \"Cleonart\", 'nama_belakang' : \"Dotulong\"};\n\t\t\t\tlocalStorage.setItem('data', data);\n\t\t\t\tconsole.log(localStorage.getItem('data'));\n\t\t\t}\n\n\t\t},\n\t\tcreated(){\n\t\t\t\n\t\t\tlet privates = key.exportKey(\"pkcs1-private-pem\");\n\t\t\tlet publics  = key.exportKey(\"pkcs8-public-pem\");\n\t\t\t/*\n\t\t\tconst clientDecrypt = new NodeRSA(privates);\n\n\t\t\t// Key from server\n\t\t\tlet public_key = \"-----BEGIN PUBLIC KEY-----\\nMIICSDANBgkqhkiG9w0BAQEFAAOCAjUAMIICMAKCAicAjL9SFajgiJEPYVHEsoz8\\no/oaHeWqOPMPe78wW2zFphUWCWpAPYSOuariz+UFCB2e3aPthq1HCOU6qsWOhseO\\ngDIPe5VIXtcHdXnv353pj4anx2cuu+t6pGAEGSODZ1CA0PBJOgEeyYzsaMDmL0Q5\\n5OHxjpqI3lE4glzxjxhB45V/og6lJlYEflRCwJfF5S/9CJr+tCSjsEC9u9eVEOJY\\ndoXq2Ey14Fy+PKZUFceArlZDvnPZ+Cw7602Gyeu0xjWCxgOBvmY39cNp10mwTG6a\\nxGWYcHsnBKzupXeZhP2qXVx0+0kzffIV57ekbbtUQrnpglssANFALipFlW6e1uW1\\niKdXOCEfeIY8Fgak0TatqB1qJu5bj6vPCUui+xPqsoEvh5RtNRg2vc8dH4ED3BTO\\n+nqGte8h7rC1/g5SQa09iKKRqOa0decti4pBLUlr36b1+sXwYGs/STEnMTCPAKvo\\n1ZRgpVSWW2EKqPYWSpUK+L7jXkEK+4/goW8DGUO573sYFuu1lIpFlfZg+fAWYx0i\\nkr2XsegRDvHjr48mOwEg0vGw/8HFodTnFaLTifRNgUkzOymbIWF5whccCP/zj2ne\\nkTLH9nq4QZrBXkrjeYII6L669WvxvxDrjEFvQJvz+9/SD3SiajBBIwpXUpyv69/r\\nEi+krm7ncYyRrFjrpPivzz41wQLFCDAFDqki9jQvNOyY6Ru1ICINMJbd3vvtV+pT\\n5O2VYADzgwIDAQAB\\n-----END PUBLIC KEY-----\"\n\n\t\t\tconst text= \"ini sayang olek pe private key\"\n\t\t\t// Encrypt using public key\n\t\t\tconst fromServer     = new NodeRSA(public_key);\n\t\t\tconst encryptedPriv  = fromServer.encrypt(text, 'base64');\n\t\t\tconst data           = {\"payload\" : encryptedPriv}\n\n\t\t\taxios.post(\"http://127.0.0.1:5000/token/generate\", data)\n\t\t\t\t .then(response => {\n\t\t\t\t \tlet io = clientDecrypt.decrypt(response.data.io, 'utf-8');\n\t\t\t\t \tconsole.log(response.data);\n\t\t\t\t \tconsole.log(io);\n\t\t\t\t })*/\n\t\t\tlet data = new crypto(\"tes\",\"tes\");\n\t\t\tlocalStorage.setItem(\"private\", privates);\n\t\t\tlocalStorage.setItem(\"public\", publics);\n\t\t}\n\t}\n</script>"]}]}