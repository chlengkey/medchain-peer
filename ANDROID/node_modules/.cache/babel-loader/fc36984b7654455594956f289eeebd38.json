{"remainingRequest":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/babel-loader/lib/index.js!/home/skynet/Documents/MedicalChain/ANDROID/src/function.js","dependencies":[{"path":"/home/skynet/Documents/MedicalChain/ANDROID/src/function.js","mtime":1621414671853},{"path":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvaG9tZS9za3luZXQvRG9jdW1lbnRzL01lZGljYWxDaGFpbi9BTkRST0lEL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL2hvbWUvc2t5bmV0L0RvY3VtZW50cy9NZWRpY2FsQ2hhaW4vQU5EUk9JRC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwoKLy8gSW1wb3J0CnZhciBOb2RlUlNBID0gcmVxdWlyZSgnbm9kZS1yc2EnKTsKCmV4cG9ydCB2YXIgVlVFX0FQUF9BUEkgPSAiaHR0cDovLzEyNy4wLjAuMTo1MDAwIjsKZXhwb3J0IHZhciBjcnlwdG8gPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIGNyeXB0bygpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBjcnlwdG8pOwoKICAgIHRoaXNbInByaXZhdGUiXSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdwcml2YXRlJyk7CiAgICB0aGlzWyJwdWJsaWMiXSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdwdWJsaWMnKTsKICAgIHRoaXMuY3J5cHRvRnVuYyA9IG5ldyBOb2RlUlNBKHRoaXNbInB1YmxpYyJdKTsKICB9CgogIF9jcmVhdGVDbGFzcyhjcnlwdG8sIFt7CiAgICBrZXk6ICJnZXRQdWJsaWMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldFB1YmxpYygpIHsKICAgICAgcmV0dXJuIHRoaXNbInB1YmxpYyJdOwogICAgfQogIH0sIHsKICAgIGtleTogImVuY3J5cHQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGVuY3J5cHQobXNnKSB7fQogIH0sIHsKICAgIGtleTogImRlY3J5cHQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGRlY3J5cHQobXNnKSB7fQogIH0sIHsKICAgIGtleTogImVuY3J5cHRQcml2YXRlS2V5IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBlbmNyeXB0UHJpdmF0ZUtleSgpIHt9CiAgfV0pOwoKICByZXR1cm4gY3J5cHRvOwp9KCk7"},{"version":3,"sources":["/home/skynet/Documents/MedicalChain/ANDROID/src/function.js"],"names":["NodeRSA","require","VUE_APP_API","crypto","localStorage","getItem","cryptoFunc","msg"],"mappings":";;;AAAA;AACA,IAAMA,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AACA,OAAO,IAAMC,WAAW,GAAG,uBAApB;AAEP,WAAaC,MAAb;AAEE,oBAAc;AAAA;;AACZ,sBAAkBC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAlB;AACA,qBAAkBD,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAlB;AACA,SAAKC,UAAL,GAAkB,IAAIN,OAAJ,CAAY,cAAZ,CAAlB;AACD;;AANH;AAAA;AAAA,WAQE,qBAAW;AACV,aAAO,cAAP;AACA;AAVH;AAAA;AAAA,WAYE,iBAAQO,GAAR,EAAY,CAEX;AAdH;AAAA;AAAA,WAgBE,iBAAQA,GAAR,EAAY,CAEX;AAlBH;AAAA;AAAA,WAoBE,6BAAmB,CAElB;AAtBH;;AAAA;AAAA","sourcesContent":["// Import\nconst NodeRSA = require('node-rsa');\nexport const VUE_APP_API = \"http://127.0.0.1:5000\"\n\nexport class crypto {\n\n  constructor() {\n    this.private    = localStorage.getItem('private');\n    this.public     = localStorage.getItem('public');\n    this.cryptoFunc = new NodeRSA(this.public);\n  }\n\n  getPublic(){\n  \treturn this.public;\n  }\n  \n  encrypt(msg){\n\n  }\n\n  decrypt(msg){\n\n  }\n\n  encryptPrivateKey(){\n\n  }\n}"]}]}