{"remainingRequest":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/babel-loader/lib/index.js!/home/skynet/Documents/MedicalChain/ANDROID/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/skynet/Documents/MedicalChain/ANDROID/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/skynet/Documents/MedicalChain/ANDROID/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/skynet/Documents/MedicalChain/ANDROID/src/views/Register.vue?vue&type=template&id=63ae9146","dependencies":[{"path":"/home/skynet/Documents/MedicalChain/ANDROID/src/views/Register.vue","mtime":1621413824291},{"path":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1616796459000},{"path":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBjcmVhdGVDb21tZW50Vk5vZGUgYXMgX2NyZWF0ZUNvbW1lbnRWTm9kZSwgY3JlYXRlVGV4dFZOb2RlIGFzIF9jcmVhdGVUZXh0Vk5vZGUsIHJlc29sdmVDb21wb25lbnQgYXMgX3Jlc29sdmVDb21wb25lbnQsIHdpdGhDdHggYXMgX3dpdGhDdHgsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jayBhcyBfY3JlYXRlQmxvY2sgfSBmcm9tICJ2dWUiOwp2YXIgX2hvaXN0ZWRfMSA9IHsKICBzdHlsZTogewogICAgImZvbnQtZmFtaWx5IjogIkludGVyIgogIH0sCiAgImNsYXNzIjogIm10LTUiCn07Cgp2YXIgX2hvaXN0ZWRfMiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImRpdiIsIHsKICAiY2xhc3MiOiAibWItMyBweC00Igp9LCBbLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgicCIsIHsKICAiY2xhc3MiOiAidGV4dC14bCBmb250LXNlbWlib2xkIgp9LCAiRm9ybXVsaXIgUGVuZGFmdGFyYW4iKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgicCIsIHsKICAiY2xhc3MiOiAidGV4dC14cyB0ZXh0LWdyYXktNTAwIgp9LCAiU2lsYWhrYW4gbWVuZ2lzaSBkYXRhIGRpYmF3YWgiKV0sIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF8zID0gLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIk5hbWEgRGVwYW4iKTsKCnZhciBfaG9pc3RlZF80ID0gLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIk5hbWEgQmVsYWthbmciKTsKCnZhciBfaG9pc3RlZF81ID0gewogICJjbGFzcyI6ICJweC0zIG10LTMiCn07Cgp2YXIgX2hvaXN0ZWRfNiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCJEYWZ0YXIiKTsKCmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgdmFyIF9jb21wb25lbnRfaW9uX2xhYmVsID0gX3Jlc29sdmVDb21wb25lbnQoImlvbi1sYWJlbCIpOwoKICB2YXIgX2NvbXBvbmVudF9pb25faW5wdXQgPSBfcmVzb2x2ZUNvbXBvbmVudCgiaW9uLWlucHV0Iik7CgogIHZhciBfY29tcG9uZW50X2lvbl9pdGVtID0gX3Jlc29sdmVDb21wb25lbnQoImlvbi1pdGVtIik7CgogIHZhciBfY29tcG9uZW50X2lvbl9idXR0b24gPSBfcmVzb2x2ZUNvbXBvbmVudCgiaW9uLWJ1dHRvbiIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImRpdiIsIF9ob2lzdGVkXzEsIFtfaG9pc3RlZF8yLCBfY3JlYXRlQ29tbWVudFZOb2RlKCIgTmFtYSBEZXBhbiAiKSwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfaW9uX2l0ZW0sIG51bGwsIHsKICAgICJkZWZhdWx0IjogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gW19jcmVhdGVWTm9kZShfY29tcG9uZW50X2lvbl9sYWJlbCwgewogICAgICAgIHBvc2l0aW9uOiAiZmxvYXRpbmciCiAgICAgIH0sIHsKICAgICAgICAiZGVmYXVsdCI6IF93aXRoQ3R4KGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHJldHVybiBbX2hvaXN0ZWRfM107CiAgICAgICAgfSksCiAgICAgICAgXzogMQogICAgICAgIC8qIFNUQUJMRSAqLwoKICAgICAgfSksIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2lvbl9pbnB1dCwgewogICAgICAgIG9uSW9uSW5wdXQ6IF9jYWNoZVsxXSB8fCAoX2NhY2hlWzFdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICAgICAgcmV0dXJuICRkYXRhLnBlbmdndW5hLm5hbWFfZGVwYW4gPSAkZXZlbnQudGFyZ2V0LnZhbHVlOwogICAgICAgIH0pCiAgICAgIH0pXTsKICAgIH0pLAogICAgXzogMQogICAgLyogU1RBQkxFICovCgogIH0pLCBfY3JlYXRlQ29tbWVudFZOb2RlKCIgTmFtYSBCZWxha2FuZyAiKSwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfaW9uX2l0ZW0sIG51bGwsIHsKICAgICJkZWZhdWx0IjogX3dpdGhDdHgoZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gW19jcmVhdGVWTm9kZShfY29tcG9uZW50X2lvbl9sYWJlbCwgewogICAgICAgIHBvc2l0aW9uOiAiZmxvYXRpbmciCiAgICAgIH0sIHsKICAgICAgICAiZGVmYXVsdCI6IF93aXRoQ3R4KGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHJldHVybiBbX2hvaXN0ZWRfNF07CiAgICAgICAgfSksCiAgICAgICAgXzogMQogICAgICAgIC8qIFNUQUJMRSAqLwoKICAgICAgfSksIF9jcmVhdGVWTm9kZShfY29tcG9uZW50X2lvbl9pbnB1dCwgewogICAgICAgIG9uSW9uSW5wdXQ6IF9jYWNoZVsyXSB8fCAoX2NhY2hlWzJdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICAgICAgcmV0dXJuICRkYXRhLnBlbmdndW5hLm5hbWFfYmVsYWthbmcgPSAkZXZlbnQudGFyZ2V0LnZhbHVlOwogICAgICAgIH0pCiAgICAgIH0pXTsKICAgIH0pLAogICAgXzogMQogICAgLyogU1RBQkxFICovCgogIH0pLCBfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzUsIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9pb25fYnV0dG9uLCBudWxsLCB7CiAgICAiZGVmYXVsdCI6IF93aXRoQ3R4KGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIFtfaG9pc3RlZF82XTsKICAgIH0pLAogICAgXzogMQogICAgLyogU1RBQkxFICovCgogIH0pXSldKTsKfQ=="},{"version":3,"sources":["/home/skynet/Documents/MedicalChain/ANDROID/src/views/Register.vue"],"names":[],"mappings":";;AACM,EAAA,KAAyB,EAAzB;AAAA,mBAAA;AAAA,G;AAA0B,WAAM;;;8BAEpC,YAAA,CAGM,KAHN,EAGM;AAHD,WAAM;AAGL,CAHN,EAAsB,C,aACrB,YAAA,CAAyD,GAAzD,EAAyD;AAAtD,WAAM;AAAgD,CAAzD,EAAiC,sBAAjC,CADqB,E,aAErB,YAAA,CAAkE,GAAlE,EAAkE;AAA/D,WAAM;AAAyD,CAAlE,EAAiC,+BAAjC,CAFqB,CAAtB,E;;AAAA,C;;+CAOgC,Y;;+CAMA,e;;;AAI3B,WAAM;;;+CACE,Q;;;;;;;;;;;uBApBd,YAAA,CAuBM,KAvBN,EAAA,UAAA,EAuBM,CArBL,UAqBK,EAhBL,mBAAA,CAAA,cAAA,CAgBK,EAfL,YAAA,CAGW,mBAHX,EAGW,IAHX,EAGW;wBAFV;AAAA,aAAqD,CAArD,YAAA,CAAqD,oBAArD,EAAqD;AAA1C,QAAA,QAAQ,EAAC;AAAiC,OAArD,EAA8B;4BAAC;AAAA,iBAAU,C,UAAA,CAAV;AAAA,S,CAAD;;;;AAAA,OAA9B,CAAqD,EACrD,YAAA,CAA6E,oBAA7E,EAA6E;AAAjE,QAAA,UAAQ,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,iBAAE,KAAA,CAAA,QAAA,CAAS,UAAT,GAAsB,MAAM,CAAC,MAAP,CAAc,KAAtC;AAAA,SAAA;AAAyD,OAA7E,CADqD,CAArD;AAAA,K,CAEU;;;;AAAA,GAHX,CAeK,EAVL,mBAAA,CAAA,iBAAA,CAUK,EATL,YAAA,CAGW,mBAHX,EAGW,IAHX,EAGW;wBAFV;AAAA,aAAwD,CAAxD,YAAA,CAAwD,oBAAxD,EAAwD;AAA7C,QAAA,QAAQ,EAAC;AAAoC,OAAxD,EAA8B;4BAAC;AAAA,iBAAa,C,UAAA,CAAb;AAAA,S,CAAD;;;;AAAA,OAA9B,CAAwD,EACxD,YAAA,CAAgF,oBAAhF,EAAgF;AAApE,QAAA,UAAQ,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,iBAAE,KAAA,CAAA,QAAA,CAAS,aAAT,GAAyB,MAAM,CAAC,MAAP,CAAc,KAAzC;AAAA,SAAA;AAA4D,OAAhF,CADwD,CAAxD;AAAA,K,CAEU;;;;AAAA,GAHX,CASK,EAJL,YAAA,CAEM,KAFN,EAAA,UAAA,EAEM,CADL,YAAA,CAA+B,qBAA/B,EAA+B,IAA/B,EAA+B;wBAAnB;AAAA,aAAM,C,UAAA,CAAN;AAAA,K,CAAmB;;;;AAAA,GAA/B,CACK,CAFN,CAIK,CAvBN,C","sourcesContent":["<template>\n\t<div style=\"font-family:Inter\" class=\"mt-5\">\n\n\t\t<div class=\"mb-3 px-4\">\n\t\t\t<p class=\"text-xl font-semibold\">Formulir Pendaftaran</p>\n\t\t\t<p class=\"text-xs text-gray-500\">Silahkan mengisi data dibawah</p>\n\t\t</div>\n\n\t\t<!-- Nama Depan -->\n\t\t<ion-item>\n\t\t\t<ion-label position=\"floating\">Nama Depan</ion-label>\n\t\t\t<ion-input @IonInput=\"pengguna.nama_depan = $event.target.value\"></ion-input>\n\t\t</ion-item>\n\n\t\t<!-- Nama Belakang -->\n\t\t<ion-item>\n\t\t\t<ion-label position=\"floating\">Nama Belakang</ion-label>\n\t\t\t<ion-input @IonInput=\"pengguna.nama_belakang = $event.target.value\"></ion-input>\n\t\t</ion-item>\n\n\t\t<div class=\"px-3 mt-3\">\n\t\t\t<ion-button>Daftar</ion-button>\n\t\t</div>\n\n\t</div>\n</template>\n\n<script type=\"text/javascript\">\n\t\n\tconst NodeRSA = require('node-rsa');\n\tconst axios = require('axios');\n\tconst key = new NodeRSA({b: 512});\n\timport { crypto } from '@/function.js';\n\n\texport default{\n\t\tdata(){\n\t\t\treturn{\n\t\t\t\tpengguna : {\n\t\t\t\t\tnama_depan : \"\",\n\t\t\t\t\tnama_belakang : \"\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcreated(){\n\t\t\t\n\t\t\tlet privates = key.exportKey(\"pkcs1-private\");\n\t\t\tlet publics  = key.exportKey(\"pkcs8-public\");\n\t\t\t/*\n\t\t\tconst clientDecrypt = new NodeRSA(privates);\n\n\t\t\t// Key from server\n\t\t\tlet public_key = \"-----BEGIN PUBLIC KEY-----\\nMIICSDANBgkqhkiG9w0BAQEFAAOCAjUAMIICMAKCAicAjL9SFajgiJEPYVHEsoz8\\no/oaHeWqOPMPe78wW2zFphUWCWpAPYSOuariz+UFCB2e3aPthq1HCOU6qsWOhseO\\ngDIPe5VIXtcHdXnv353pj4anx2cuu+t6pGAEGSODZ1CA0PBJOgEeyYzsaMDmL0Q5\\n5OHxjpqI3lE4glzxjxhB45V/og6lJlYEflRCwJfF5S/9CJr+tCSjsEC9u9eVEOJY\\ndoXq2Ey14Fy+PKZUFceArlZDvnPZ+Cw7602Gyeu0xjWCxgOBvmY39cNp10mwTG6a\\nxGWYcHsnBKzupXeZhP2qXVx0+0kzffIV57ekbbtUQrnpglssANFALipFlW6e1uW1\\niKdXOCEfeIY8Fgak0TatqB1qJu5bj6vPCUui+xPqsoEvh5RtNRg2vc8dH4ED3BTO\\n+nqGte8h7rC1/g5SQa09iKKRqOa0decti4pBLUlr36b1+sXwYGs/STEnMTCPAKvo\\n1ZRgpVSWW2EKqPYWSpUK+L7jXkEK+4/goW8DGUO573sYFuu1lIpFlfZg+fAWYx0i\\nkr2XsegRDvHjr48mOwEg0vGw/8HFodTnFaLTifRNgUkzOymbIWF5whccCP/zj2ne\\nkTLH9nq4QZrBXkrjeYII6L669WvxvxDrjEFvQJvz+9/SD3SiajBBIwpXUpyv69/r\\nEi+krm7ncYyRrFjrpPivzz41wQLFCDAFDqki9jQvNOyY6Ru1ICINMJbd3vvtV+pT\\n5O2VYADzgwIDAQAB\\n-----END PUBLIC KEY-----\"\n\n\t\t\tconst text= \"ini sayang olek pe private key\"\n\t\t\t// Encrypt using public key\n\t\t\tconst fromServer     = new NodeRSA(public_key);\n\t\t\tconst encryptedPriv  = fromServer.encrypt(text, 'base64');\n\t\t\tconst data           = {\"payload\" : encryptedPriv}\n\n\t\t\taxios.post(\"http://127.0.0.1:5000/token/generate\", data)\n\t\t\t\t .then(response => {\n\t\t\t\t \tlet io = clientDecrypt.decrypt(response.data.io, 'utf-8');\n\t\t\t\t \tconsole.log(response.data);\n\t\t\t\t \tconsole.log(io);\n\t\t\t\t })*/\n\t\t\tlet data = new crypto(\"tes\",\"tes\");\n\t\t\tlocalStorage.setItem(\"private\", privates);\n\t\t\tdata.get();\n\t\t}\n\t}\n</script>"],"sourceRoot":""}]}