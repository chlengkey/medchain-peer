{"remainingRequest":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/babel-loader/lib/index.js!/home/skynet/Documents/MedicalChain/ANDROID/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/skynet/Documents/MedicalChain/ANDROID/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/skynet/Documents/MedicalChain/ANDROID/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/skynet/Documents/MedicalChain/ANDROID/src/components/Tokenization.vue?vue&type=template&id=f311f20a","dependencies":[{"path":"/home/skynet/Documents/MedicalChain/ANDROID/src/components/Tokenization.vue","mtime":1621571443880},{"path":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1616796459000},{"path":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUsIHJlc29sdmVDb21wb25lbnQgYXMgX3Jlc29sdmVDb21wb25lbnQsIGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgY3JlYXRlVGV4dFZOb2RlIGFzIF9jcmVhdGVUZXh0Vk5vZGUsIEZyYWdtZW50IGFzIF9GcmFnbWVudCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jayB9IGZyb20gInZ1ZSI7Cgp2YXIgX2hvaXN0ZWRfMSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImJyIiwgbnVsbCwgbnVsbCwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzIgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgiQnVhdCBUb2tlbiIpOwoKdmFyIF9ob2lzdGVkXzMgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJiciIsIG51bGwsIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF80ID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgic3BhbiIsIHsKICAiY2xhc3MiOiAiZm9udC1ub3JtYWwiCn0sICJNZW1iYW50dSBwZW1lcmlrc2FhbiBsZWJpaCBhbWFuIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9pb25faWNvbiA9IF9yZXNvbHZlQ29tcG9uZW50KCJpb24taWNvbiIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX0ZyYWdtZW50LCBudWxsLCBbX2NyZWF0ZUNvbW1lbnRWTm9kZSgiPGRpdiBAY2xpY2s9XCJ0b2tlbk9wZW4oKVwiIiksIF9jcmVhdGVWTm9kZSgiZGl2IiwgewogICAgb25DbGljazogX2NhY2hlWzFdIHx8IChfY2FjaGVbMV0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5zaG93TW9kYWwoKTsKICAgIH0pLAogICAgImNsYXNzIjogImJnLW9yYW5nZS01MDAgaC1mdWxsIHJvdW5kZWQtbWQgcC0zIHRleHQtd2hpdGUgdGV4dC14cyBmb250LWJvbGQiLAogICAgc3R5bGU6IHsKICAgICAgImZvbnQtZmFtaWx5IjogIidJbnRlciciCiAgICB9CiAgfSwgW19jcmVhdGVWTm9kZShfY29tcG9uZW50X2lvbl9pY29uLCB7CiAgICAiY2xhc3MiOiAibXItMSIsCiAgICBpY29uOiAkZGF0YS50aW1lcgogIH0sIG51bGwsIDgKICAvKiBQUk9QUyAqLwogICwgWyJpY29uIl0pLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9pb25faWNvbiwgewogICAgaWNvbjogJGRhdGEubG9ja0Nsb3NlZAogIH0sIG51bGwsIDgKICAvKiBQUk9QUyAqLwogICwgWyJpY29uIl0pLCBfaG9pc3RlZF8xLCBfaG9pc3RlZF8yLCBfaG9pc3RlZF8zLCBfaG9pc3RlZF80XSldLCAyMTEyCiAgLyogU1RBQkxFX0ZSQUdNRU5ULCBERVZfUk9PVF9GUkFHTUVOVCAqLwogICk7Cn0="},{"version":3,"sources":["/home/skynet/Documents/MedicalChain/ANDROID/src/components/Tokenization.vue"],"names":[],"mappings":";;8BAME,YAAA,CAAK,IAAL,EAAK,IAAL,EAAK,IAAL,EAAK,CAAA;AAAA;AAAL,C;;+CAAK,Y;;8BAAU,YAAA,CAAK,IAAL,EAAK,IAAL,EAAK,IAAL,EAAK,CAAA;AAAA;AAAL,C;;8BACf,YAAA,CAAgE,MAAhE,EAAgE;AAA1D,WAAM;AAAoD,CAAhE,EAA0B,iCAA1B,EAAyD,CAAA;AAAA;AAAzD,C;;;;;sDAND,mBAAA,CAAA,6BAAA,C,EACA,YAAA,CAMS,KANT,EAMS;AANH,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,QAAA,CAAA,SAAA,EAAF;AAAA,KAAA,CAMF;AALR,aAAM,kEAKE;AALiE,IAAA,KAA2B,EAA3B;AAAA,qBAAA;AAAA;AAKjE,GANT,E,CAEC,YAAA,CAAuC,mBAAvC,EAAuC;AAA7B,aAAM,MAAuB;AAAf,IAAA,IAAI,EAAE,KAAA,CAAA;AAAS,GAAvC,E,IAAA,E;;AAAA,I,QAAA,C,EACA,YAAA,CAA+B,mBAA/B,EAA+B;AAApB,IAAA,IAAI,EAAE,KAAA,CAAA;AAAc,GAA/B,EAA2B,IAA3B,EAA2B;AAAA;AAA3B,IAA2B,CAAA,MAAA,CAA3B,C,EACA,U,cAAe,U,EACf,U,CALD,C","sourcesContent":["<template>\n\t<!--<div @click=\"tokenOpen()\"-->\n\t<div @click=\"showModal()\"\n\t\tclass=\"bg-orange-500 h-full rounded-md p-3 text-white text-xs font-bold\" style=\"font-family:'Inter'\">\n\t\t<ion-icon class=\"mr-1\" :icon=\"timer\" />\n\t\t<ion-icon :icon=\"lockClosed\" />\n\t\t<br/>Buat Token<br/>\n\t\t<span class=\"font-normal\">Membantu pemeriksaan lebih aman</span>\n    </div>\n</template>\n\n<script type=\"text/javascript\">\n\n\t// Modules\n\timport TokenModal from '@/modules/TokenModal.vue'\n\timport { modalController, alertController, IonIcon } from '@ionic/vue';\n\n\t// Components and Icons\n\timport { timer, lockClosed } from 'ionicons/icons';\n\n\t// API\n\timport {VUE_APP_API} from '@/function.js'\n\tconst axios = require('axios');\n\t\n\texport default{\n\t\tcomponents : {IonIcon},\n\t\tdata(){\n\t\t\treturn{\n\t\t\t\tclinicData : [\n\t\t\t\t\t{\n\t\t\t\t\t\tklinikNama : \"Puskesmas Tomohon\",\n\t\t\t\t\t\tklinikAlamat : \"Jl. Tomohon\",\n\t\t\t\t\t\tklinikId     : \"public_key\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tlockClosed,\n\t\t\t\ttimer,\n\t\t\t\ttokenLocal  : \"\",\n\t\t\t\texpiredTime : 9999999999999,\n\t\t\t}\n\t\t},\n\t\tprops : ['token'],\n\t\tmethods : {\n\t\t\t\n\t\t\tshowModal : async function(){\n\t\t\t\tconst modal = await modalController.create({\n\t\t\t\t\tcomponent: TokenModal,\n\t\t\t\t})\n\t\t\t\tawait modal.present()\n\t\t\t},\n\t\t\t\n\t\t\tgetTimestamp : function() {\n\t\t\t\tconst timestamp = new Date();\n\t\t\t\tconst timestampNow = timestamp.getTime();\n\t\t\t\treturn timestampNow;\n\t\t\t},\n\n\t\t\tgetTokenExpireTime : function() {\n\t\t\t\treturn parseInt((this.expiredTime - this.getTimestamp()) / 3600000 * 60); \n\t\t\t},\n\n\t\t\tgenerateToken : function(){\n\n\t\t\t\t// PAYLOAD\n\t\t\t\t// enkripsi private_key dengan menggunakan public_key fasilitas kesehatan\n\t\t\t\taxios.get(VUE_APP_API + \"/token/generate\")\n\t\t\t\t\t.then(response => {\n\t\t\t\t\t\tconsole.log(response);\n\t\t\t\t\t})\n\n\t\t\t\t//const min = 10000;\n\t\t\t\t//const max = 99999;\n\t\t\t\t//const token = Math.floor(Math.random() * (max-min)) + min;\n\t\t\t\t//return token\n\t\t\t},\n\t\t\t\n\t\t\tgetToken : function(){\n\t\t\t\treturn this.tokenLocal;\n\t\t\t},\n\n\t\t\ttokenOpen : function(){\n\n\t\t\t\t/* \n\t\t\t\t\tMengecek Jika Token sudah expire atau belum\n\t\t\t\t*/\n\t\t\t\tif (this.getTokenExpireTime() <= 0) {\n\t\t\t\t\tthis.tokenExpired();\n\t\t\t\t\tthis.tokenLocal = \"\";\n\t\t\t\t\tthis.expiredTime = 0;\n\t\t\t\t}\n\n\t\t\t\telse {\n\n\t\t\t\t\t/*\n\t\t\t\t\t\tMembuat Token Baru\n\t\t\t\t\t*/\n\t\t\t\t\tif (this.tokenLocal == \"\") {\n\t\t\t\t\t\tthis.tokenNew();\n\t\t\t\t\t}\n\n\t\t\t\t\t/*\n\t\t\t\t\t\tMenampilkan Token yang sudah di generate\n\t\t\t\t\t*/\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.tokenMain();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tasync tokenNew(){\n\t\t\t\tconst app = this;\n\t\t\t\tconst alert = await alertController.create({\n\t\t\t\t\theader    : 'Buat Token',\n\t\t\t\t\tsubHeader : \"Anda Setuju?\",\n\t\t\t\t\tmessage   : \"<p class='text-sm'>Dengan membuat token anda setuju memberikan data rekam medis anda</p>\",\n\t\t\t\t\tbuttons   : ['Batal',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext:'Setuju', \n\t\t\t\t\t\t\thandler : () => {\n\t\t\t\t\t\t\t\tapp.tokenLocal  = app.generateToken();\n\t\t\t\t\t\t\t\tapp.expiredTime = app.getTimestamp() + 1800000;\n\t\t\t\t\t\t\t\t//app.tokenMain();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t\tawait alert.present();\n\t\t\t},\n\n\t\t\tasync tokenExpired(){\n\t\t\t\tconst app = this;\n\t\t\t\tconst alert = await alertController.create({\n\t\t\t\t\theader    : 'Mengambil Token Gagal',\n\t\t\t\t\tsubHeader : \"Token sudah expire\",\n\t\t\t\t\tmessage   : \"<p class='text-sm'>Token anda telah melewati batas waktu yang ditentukan, silahkan buat lagi</p>\",\n\t\t\t\t\tbuttons   : [{text:'Ok', handler : () => {\n\t\t\t\t\t\tapp.tokenNew();\n\t\t\t\t\t}}]\n\t\t\t\t});\n\t\t\t\tawait alert.present();\n\t\t\t\tawait alert.onDidDismiss();\t\n\t\t\t},\n\n\t\t\tasync tokenMain() {\n\t\t\t\tlet htmlAlert = \"\";\n\t\t\t\thtmlAlert += \"<p class='text-sm'>\"\n\t\t\t\thtmlAlert += \"Silahkan memberikan token kepada staff medis untuk mengizinkan pengaksesan data rekam medis anda</p>\";\n\t\t\t\thtmlAlert += \"<p class='text-center text-4xl text-orange-600 font-bold'>\" + this.tokenLocal + \"</p>\";\n\t\t\t\thtmlAlert += \"<p class='text-xs text-center'>Sisa Waktu : <span class='text-red-500 font-bold'>\" + this.getTokenExpireTime() + \" Menit</span></p>\"\n\n\t\t\t\tconst alert = await alertController.create({\n\t\t\t\t\tcssClass: 'my-custom-class',\n\t\t\t\t\theader: 'Token',\n\t\t\t\t\tsubHeader: 'Berhasil dibuat',\n\t\t\t\t\tmessage: htmlAlert,\n\t\t\t\t\tbuttons: ['OK'],\n\t\t\t\t});\n\t\t\t\tawait alert.present();\n\t\t\t}\n\n\t\t},\n\n\t\tcreated(){\n\t\t\tif (this.token) {\n\t\t\t\tthis.tokenLocal = this.token;\n\t\t\t}\n\t\t},\n\t}\n</script>"],"sourceRoot":""}]}