{"remainingRequest":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/babel-loader/lib/index.js!/home/skynet/Documents/MedicalChain/ANDROID/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/skynet/Documents/MedicalChain/ANDROID/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/skynet/Documents/MedicalChain/ANDROID/src/components/Tokenization.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/skynet/Documents/MedicalChain/ANDROID/src/components/Tokenization.vue","mtime":1621571443880},{"path":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3NreW5ldC9Eb2N1bWVudHMvTWVkaWNhbENoYWluL0FORFJPSUQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5kYXRlLnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnBhcnNlLWludC5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKLy8gTW9kdWxlcwppbXBvcnQgVG9rZW5Nb2RhbCBmcm9tICdAL21vZHVsZXMvVG9rZW5Nb2RhbC52dWUnOwppbXBvcnQgeyBtb2RhbENvbnRyb2xsZXIsIGFsZXJ0Q29udHJvbGxlciwgSW9uSWNvbiB9IGZyb20gJ0Bpb25pYy92dWUnOyAvLyBDb21wb25lbnRzIGFuZCBJY29ucwoKaW1wb3J0IHsgdGltZXIsIGxvY2tDbG9zZWQgfSBmcm9tICdpb25pY29ucy9pY29ucyc7IC8vIEFQSQoKaW1wb3J0IHsgVlVFX0FQUF9BUEkgfSBmcm9tICdAL2Z1bmN0aW9uLmpzJzsKCnZhciBheGlvcyA9IHJlcXVpcmUoJ2F4aW9zJyk7CgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgSW9uSWNvbjogSW9uSWNvbgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNsaW5pY0RhdGE6IFt7CiAgICAgICAga2xpbmlrTmFtYTogIlB1c2tlc21hcyBUb21vaG9uIiwKICAgICAgICBrbGluaWtBbGFtYXQ6ICJKbC4gVG9tb2hvbiIsCiAgICAgICAga2xpbmlrSWQ6ICJwdWJsaWNfa2V5IgogICAgICB9XSwKICAgICAgbG9ja0Nsb3NlZDogbG9ja0Nsb3NlZCwKICAgICAgdGltZXI6IHRpbWVyLAogICAgICB0b2tlbkxvY2FsOiAiIiwKICAgICAgZXhwaXJlZFRpbWU6IDk5OTk5OTk5OTk5OTkKICAgIH07CiAgfSwKICBwcm9wczogWyd0b2tlbiddLAogIG1ldGhvZHM6IHsKICAgIHNob3dNb2RhbDogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX3Nob3dNb2RhbCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgbW9kYWw7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gbW9kYWxDb250cm9sbGVyLmNyZWF0ZSh7CiAgICAgICAgICAgICAgICAgIGNvbXBvbmVudDogVG9rZW5Nb2RhbAogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIG1vZGFsID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIG1vZGFsLnByZXNlbnQoKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIHNob3dNb2RhbCgpIHsKICAgICAgICByZXR1cm4gX3Nob3dNb2RhbC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gc2hvd01vZGFsOwogICAgfSgpLAogICAgZ2V0VGltZXN0YW1wOiBmdW5jdGlvbiBnZXRUaW1lc3RhbXAoKSB7CiAgICAgIHZhciB0aW1lc3RhbXAgPSBuZXcgRGF0ZSgpOwogICAgICB2YXIgdGltZXN0YW1wTm93ID0gdGltZXN0YW1wLmdldFRpbWUoKTsKICAgICAgcmV0dXJuIHRpbWVzdGFtcE5vdzsKICAgIH0sCiAgICBnZXRUb2tlbkV4cGlyZVRpbWU6IGZ1bmN0aW9uIGdldFRva2VuRXhwaXJlVGltZSgpIHsKICAgICAgcmV0dXJuIHBhcnNlSW50KCh0aGlzLmV4cGlyZWRUaW1lIC0gdGhpcy5nZXRUaW1lc3RhbXAoKSkgLyAzNjAwMDAwICogNjApOwogICAgfSwKICAgIGdlbmVyYXRlVG9rZW46IGZ1bmN0aW9uIGdlbmVyYXRlVG9rZW4oKSB7CiAgICAgIC8vIFBBWUxPQUQKICAgICAgLy8gZW5rcmlwc2kgcHJpdmF0ZV9rZXkgZGVuZ2FuIG1lbmdndW5ha2FuIHB1YmxpY19rZXkgZmFzaWxpdGFzIGtlc2VoYXRhbgogICAgICBheGlvcy5nZXQoVlVFX0FQUF9BUEkgKyAiL3Rva2VuL2dlbmVyYXRlIikudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7CiAgICAgIH0pOyAvL2NvbnN0IG1pbiA9IDEwMDAwOwogICAgICAvL2NvbnN0IG1heCA9IDk5OTk5OwogICAgICAvL2NvbnN0IHRva2VuID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKG1heC1taW4pKSArIG1pbjsKICAgICAgLy9yZXR1cm4gdG9rZW4KICAgIH0sCiAgICBnZXRUb2tlbjogZnVuY3Rpb24gZ2V0VG9rZW4oKSB7CiAgICAgIHJldHVybiB0aGlzLnRva2VuTG9jYWw7CiAgICB9LAogICAgdG9rZW5PcGVuOiBmdW5jdGlvbiB0b2tlbk9wZW4oKSB7CiAgICAgIC8qIAogICAgICAJTWVuZ2VjZWsgSmlrYSBUb2tlbiBzdWRhaCBleHBpcmUgYXRhdSBiZWx1bQogICAgICAqLwogICAgICBpZiAodGhpcy5nZXRUb2tlbkV4cGlyZVRpbWUoKSA8PSAwKSB7CiAgICAgICAgdGhpcy50b2tlbkV4cGlyZWQoKTsKICAgICAgICB0aGlzLnRva2VuTG9jYWwgPSAiIjsKICAgICAgICB0aGlzLmV4cGlyZWRUaW1lID0gMDsKICAgICAgfSBlbHNlIHsKICAgICAgICAvKgogICAgICAgIAlNZW1idWF0IFRva2VuIEJhcnUKICAgICAgICAqLwogICAgICAgIGlmICh0aGlzLnRva2VuTG9jYWwgPT0gIiIpIHsKICAgICAgICAgIHRoaXMudG9rZW5OZXcoKTsKICAgICAgICB9CiAgICAgICAgLyoKICAgICAgICAJTWVuYW1waWxrYW4gVG9rZW4geWFuZyBzdWRhaCBkaSBnZW5lcmF0ZQogICAgICAgICovCiAgICAgICAgZWxzZSB7CiAgICAgICAgICAgIHRoaXMudG9rZW5NYWluKCk7CiAgICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICB0b2tlbk5ldzogZnVuY3Rpb24gdG9rZW5OZXcoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgYXBwLCBhbGVydDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgYXBwID0gX3RoaXM7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gYWxlcnRDb250cm9sbGVyLmNyZWF0ZSh7CiAgICAgICAgICAgICAgICAgIGhlYWRlcjogJ0J1YXQgVG9rZW4nLAogICAgICAgICAgICAgICAgICBzdWJIZWFkZXI6ICJBbmRhIFNldHVqdT8iLAogICAgICAgICAgICAgICAgICBtZXNzYWdlOiAiPHAgY2xhc3M9J3RleHQtc20nPkRlbmdhbiBtZW1idWF0IHRva2VuIGFuZGEgc2V0dWp1IG1lbWJlcmlrYW4gZGF0YSByZWthbSBtZWRpcyBhbmRhPC9wPiIsCiAgICAgICAgICAgICAgICAgIGJ1dHRvbnM6IFsnQmF0YWwnLCB7CiAgICAgICAgICAgICAgICAgICAgdGV4dDogJ1NldHVqdScsCiAgICAgICAgICAgICAgICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcigpIHsKICAgICAgICAgICAgICAgICAgICAgIGFwcC50b2tlbkxvY2FsID0gYXBwLmdlbmVyYXRlVG9rZW4oKTsKICAgICAgICAgICAgICAgICAgICAgIGFwcC5leHBpcmVkVGltZSA9IGFwcC5nZXRUaW1lc3RhbXAoKSArIDE4MDAwMDA7IC8vYXBwLnRva2VuTWFpbigpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBhbGVydCA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA2OwogICAgICAgICAgICAgICAgcmV0dXJuIGFsZXJ0LnByZXNlbnQoKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgdG9rZW5FeHBpcmVkOiBmdW5jdGlvbiB0b2tlbkV4cGlyZWQoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIGFwcCwgYWxlcnQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGFwcCA9IF90aGlzMjsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBhbGVydENvbnRyb2xsZXIuY3JlYXRlKHsKICAgICAgICAgICAgICAgICAgaGVhZGVyOiAnTWVuZ2FtYmlsIFRva2VuIEdhZ2FsJywKICAgICAgICAgICAgICAgICAgc3ViSGVhZGVyOiAiVG9rZW4gc3VkYWggZXhwaXJlIiwKICAgICAgICAgICAgICAgICAgbWVzc2FnZTogIjxwIGNsYXNzPSd0ZXh0LXNtJz5Ub2tlbiBhbmRhIHRlbGFoIG1lbGV3YXRpIGJhdGFzIHdha3R1IHlhbmcgZGl0ZW50dWthbiwgc2lsYWhrYW4gYnVhdCBsYWdpPC9wPiIsCiAgICAgICAgICAgICAgICAgIGJ1dHRvbnM6IFt7CiAgICAgICAgICAgICAgICAgICAgdGV4dDogJ09rJywKICAgICAgICAgICAgICAgICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKCkgewogICAgICAgICAgICAgICAgICAgICAgYXBwLnRva2VuTmV3KCk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9XQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIGFsZXJ0ID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDY7CiAgICAgICAgICAgICAgICByZXR1cm4gYWxlcnQucHJlc2VudCgpOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDg7CiAgICAgICAgICAgICAgICByZXR1cm4gYWxlcnQub25EaWREaXNtaXNzKCk7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHRva2VuTWFpbjogZnVuY3Rpb24gdG9rZW5NYWluKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICAgIHZhciBodG1sQWxlcnQsIGFsZXJ0OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBodG1sQWxlcnQgPSAiIjsKICAgICAgICAgICAgICAgIGh0bWxBbGVydCArPSAiPHAgY2xhc3M9J3RleHQtc20nPiI7CiAgICAgICAgICAgICAgICBodG1sQWxlcnQgKz0gIlNpbGFoa2FuIG1lbWJlcmlrYW4gdG9rZW4ga2VwYWRhIHN0YWZmIG1lZGlzIHVudHVrIG1lbmdpemlua2FuIHBlbmdha3Nlc2FuIGRhdGEgcmVrYW0gbWVkaXMgYW5kYTwvcD4iOwogICAgICAgICAgICAgICAgaHRtbEFsZXJ0ICs9ICI8cCBjbGFzcz0ndGV4dC1jZW50ZXIgdGV4dC00eGwgdGV4dC1vcmFuZ2UtNjAwIGZvbnQtYm9sZCc+IiArIF90aGlzMy50b2tlbkxvY2FsICsgIjwvcD4iOwogICAgICAgICAgICAgICAgaHRtbEFsZXJ0ICs9ICI8cCBjbGFzcz0ndGV4dC14cyB0ZXh0LWNlbnRlcic+U2lzYSBXYWt0dSA6IDxzcGFuIGNsYXNzPSd0ZXh0LXJlZC01MDAgZm9udC1ib2xkJz4iICsgX3RoaXMzLmdldFRva2VuRXhwaXJlVGltZSgpICsgIiBNZW5pdDwvc3Bhbj48L3A+IjsKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gNzsKICAgICAgICAgICAgICAgIHJldHVybiBhbGVydENvbnRyb2xsZXIuY3JlYXRlKHsKICAgICAgICAgICAgICAgICAgY3NzQ2xhc3M6ICdteS1jdXN0b20tY2xhc3MnLAogICAgICAgICAgICAgICAgICBoZWFkZXI6ICdUb2tlbicsCiAgICAgICAgICAgICAgICAgIHN1YkhlYWRlcjogJ0Jlcmhhc2lsIGRpYnVhdCcsCiAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGh0bWxBbGVydCwKICAgICAgICAgICAgICAgICAgYnV0dG9uczogWydPSyddCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgYWxlcnQgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICByZXR1cm4gYWxlcnQucHJlc2VudCgpOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0KTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgaWYgKHRoaXMudG9rZW4pIHsKICAgICAgdGhpcy50b2tlbkxvY2FsID0gdGhpcy50b2tlbjsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/home/skynet/Documents/MedicalChain/ANDROID/src/components/Tokenization.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\t<!--<div @click=\"tokenOpen()\"-->\n\t<div @click=\"showModal()\"\n\t\tclass=\"bg-orange-500 h-full rounded-md p-3 text-white text-xs font-bold\" style=\"font-family:'Inter'\">\n\t\t<ion-icon class=\"mr-1\" :icon=\"timer\" />\n\t\t<ion-icon :icon=\"lockClosed\" />\n\t\t<br/>Buat Token<br/>\n\t\t<span class=\"font-normal\">Membantu pemeriksaan lebih aman</span>\n    </div>\n</template>\n\n<script type=\"text/javascript\">\n\n\t// Modules\n\timport TokenModal from '@/modules/TokenModal.vue'\n\timport { modalController, alertController, IonIcon } from '@ionic/vue';\n\n\t// Components and Icons\n\timport { timer, lockClosed } from 'ionicons/icons';\n\n\t// API\n\timport {VUE_APP_API} from '@/function.js'\n\tconst axios = require('axios');\n\t\n\texport default{\n\t\tcomponents : {IonIcon},\n\t\tdata(){\n\t\t\treturn{\n\t\t\t\tclinicData : [\n\t\t\t\t\t{\n\t\t\t\t\t\tklinikNama : \"Puskesmas Tomohon\",\n\t\t\t\t\t\tklinikAlamat : \"Jl. Tomohon\",\n\t\t\t\t\t\tklinikId     : \"public_key\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tlockClosed,\n\t\t\t\ttimer,\n\t\t\t\ttokenLocal  : \"\",\n\t\t\t\texpiredTime : 9999999999999,\n\t\t\t}\n\t\t},\n\t\tprops : ['token'],\n\t\tmethods : {\n\t\t\t\n\t\t\tshowModal : async function(){\n\t\t\t\tconst modal = await modalController.create({\n\t\t\t\t\tcomponent: TokenModal,\n\t\t\t\t})\n\t\t\t\tawait modal.present()\n\t\t\t},\n\t\t\t\n\t\t\tgetTimestamp : function() {\n\t\t\t\tconst timestamp = new Date();\n\t\t\t\tconst timestampNow = timestamp.getTime();\n\t\t\t\treturn timestampNow;\n\t\t\t},\n\n\t\t\tgetTokenExpireTime : function() {\n\t\t\t\treturn parseInt((this.expiredTime - this.getTimestamp()) / 3600000 * 60); \n\t\t\t},\n\n\t\t\tgenerateToken : function(){\n\n\t\t\t\t// PAYLOAD\n\t\t\t\t// enkripsi private_key dengan menggunakan public_key fasilitas kesehatan\n\t\t\t\taxios.get(VUE_APP_API + \"/token/generate\")\n\t\t\t\t\t.then(response => {\n\t\t\t\t\t\tconsole.log(response);\n\t\t\t\t\t})\n\n\t\t\t\t//const min = 10000;\n\t\t\t\t//const max = 99999;\n\t\t\t\t//const token = Math.floor(Math.random() * (max-min)) + min;\n\t\t\t\t//return token\n\t\t\t},\n\t\t\t\n\t\t\tgetToken : function(){\n\t\t\t\treturn this.tokenLocal;\n\t\t\t},\n\n\t\t\ttokenOpen : function(){\n\n\t\t\t\t/* \n\t\t\t\t\tMengecek Jika Token sudah expire atau belum\n\t\t\t\t*/\n\t\t\t\tif (this.getTokenExpireTime() <= 0) {\n\t\t\t\t\tthis.tokenExpired();\n\t\t\t\t\tthis.tokenLocal = \"\";\n\t\t\t\t\tthis.expiredTime = 0;\n\t\t\t\t}\n\n\t\t\t\telse {\n\n\t\t\t\t\t/*\n\t\t\t\t\t\tMembuat Token Baru\n\t\t\t\t\t*/\n\t\t\t\t\tif (this.tokenLocal == \"\") {\n\t\t\t\t\t\tthis.tokenNew();\n\t\t\t\t\t}\n\n\t\t\t\t\t/*\n\t\t\t\t\t\tMenampilkan Token yang sudah di generate\n\t\t\t\t\t*/\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.tokenMain();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tasync tokenNew(){\n\t\t\t\tconst app = this;\n\t\t\t\tconst alert = await alertController.create({\n\t\t\t\t\theader    : 'Buat Token',\n\t\t\t\t\tsubHeader : \"Anda Setuju?\",\n\t\t\t\t\tmessage   : \"<p class='text-sm'>Dengan membuat token anda setuju memberikan data rekam medis anda</p>\",\n\t\t\t\t\tbuttons   : ['Batal',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext:'Setuju', \n\t\t\t\t\t\t\thandler : () => {\n\t\t\t\t\t\t\t\tapp.tokenLocal  = app.generateToken();\n\t\t\t\t\t\t\t\tapp.expiredTime = app.getTimestamp() + 1800000;\n\t\t\t\t\t\t\t\t//app.tokenMain();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t\tawait alert.present();\n\t\t\t},\n\n\t\t\tasync tokenExpired(){\n\t\t\t\tconst app = this;\n\t\t\t\tconst alert = await alertController.create({\n\t\t\t\t\theader    : 'Mengambil Token Gagal',\n\t\t\t\t\tsubHeader : \"Token sudah expire\",\n\t\t\t\t\tmessage   : \"<p class='text-sm'>Token anda telah melewati batas waktu yang ditentukan, silahkan buat lagi</p>\",\n\t\t\t\t\tbuttons   : [{text:'Ok', handler : () => {\n\t\t\t\t\t\tapp.tokenNew();\n\t\t\t\t\t}}]\n\t\t\t\t});\n\t\t\t\tawait alert.present();\n\t\t\t\tawait alert.onDidDismiss();\t\n\t\t\t},\n\n\t\t\tasync tokenMain() {\n\t\t\t\tlet htmlAlert = \"\";\n\t\t\t\thtmlAlert += \"<p class='text-sm'>\"\n\t\t\t\thtmlAlert += \"Silahkan memberikan token kepada staff medis untuk mengizinkan pengaksesan data rekam medis anda</p>\";\n\t\t\t\thtmlAlert += \"<p class='text-center text-4xl text-orange-600 font-bold'>\" + this.tokenLocal + \"</p>\";\n\t\t\t\thtmlAlert += \"<p class='text-xs text-center'>Sisa Waktu : <span class='text-red-500 font-bold'>\" + this.getTokenExpireTime() + \" Menit</span></p>\"\n\n\t\t\t\tconst alert = await alertController.create({\n\t\t\t\t\tcssClass: 'my-custom-class',\n\t\t\t\t\theader: 'Token',\n\t\t\t\t\tsubHeader: 'Berhasil dibuat',\n\t\t\t\t\tmessage: htmlAlert,\n\t\t\t\t\tbuttons: ['OK'],\n\t\t\t\t});\n\t\t\t\tawait alert.present();\n\t\t\t}\n\n\t\t},\n\n\t\tcreated(){\n\t\t\tif (this.token) {\n\t\t\t\tthis.tokenLocal = this.token;\n\t\t\t}\n\t\t},\n\t}\n</script>"],"sourceRoot":""}]}