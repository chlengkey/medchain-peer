{"remainingRequest":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/babel-loader/lib/index.js!/home/skynet/Documents/MedicalChain/ANDROID/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/skynet/Documents/MedicalChain/ANDROID/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/skynet/Documents/MedicalChain/ANDROID/src/views/Register.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/skynet/Documents/MedicalChain/ANDROID/src/views/Register.vue","mtime":1621413824291},{"path":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/skynet/Documents/MedicalChain/ANDROID/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIE5vZGVSU0EgPSByZXF1aXJlKCdub2RlLXJzYScpOwoKdmFyIGF4aW9zID0gcmVxdWlyZSgnYXhpb3MnKTsKCnZhciBrZXkgPSBuZXcgTm9kZVJTQSh7CiAgYjogNTEyCn0pOwppbXBvcnQgeyBjcnlwdG8gfSBmcm9tICdAL2Z1bmN0aW9uLmpzJzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwZW5nZ3VuYTogewogICAgICAgIG5hbWFfZGVwYW46ICIiLAogICAgICAgIG5hbWFfYmVsYWthbmc6ICIiCiAgICAgIH0KICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIHByaXZhdGVzID0ga2V5LmV4cG9ydEtleSgicGtjczEtcHJpdmF0ZSIpOwogICAgdmFyIHB1YmxpY3MgPSBrZXkuZXhwb3J0S2V5KCJwa2NzOC1wdWJsaWMiKTsKICAgIC8qCiAgICBjb25zdCBjbGllbnREZWNyeXB0ID0gbmV3IE5vZGVSU0EocHJpdmF0ZXMpOwogICAgCS8vIEtleSBmcm9tIHNlcnZlcgogICAgbGV0IHB1YmxpY19rZXkgPSAiLS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS1cbk1JSUNTREFOQmdrcWhraUc5dzBCQVFFRkFBT0NBalVBTUlJQ01BS0NBaWNBakw5U0ZhamdpSkVQWVZIRXNvejhcbm8vb2FIZVdxT1BNUGU3OHdXMnpGcGhVV0NXcEFQWVNPdWFyaXorVUZDQjJlM2FQdGhxMUhDT1U2cXNXT2hzZU9cbmdESVBlNVZJWHRjSGRYbnYzNTNwajRhbngyY3V1K3Q2cEdBRUdTT0RaMUNBMFBCSk9nRWV5WXpzYU1EbUwwUTVcbjVPSHhqcHFJM2xFNGdsenhqeGhCNDVWL29nNmxKbFlFZmxSQ3dKZkY1Uy85Q0pyK3RDU2pzRUM5dTllVkVPSllcbmRvWHEyRXkxNEZ5K1BLWlVGY2VBcmxaRHZuUForQ3c3NjAyR3lldTB4aldDeGdPQnZtWTM5Y05wMTBtd1RHNmFcbnhHV1ljSHNuQkt6dXBYZVpoUDJxWFZ4MCswa3pmZklWNTdla2JidFVRcm5wZ2xzc0FORkFMaXBGbFc2ZTF1VzFcbmlLZFhPQ0VmZUlZOEZnYWswVGF0cUIxcUp1NWJqNnZQQ1V1aSt4UHFzb0V2aDVSdE5SZzJ2YzhkSDRFRDNCVE9cbitucUd0ZThoN3JDMS9nNVNRYTA5aUtLUnFPYTBkZWN0aTRwQkxVbHIzNmIxK3NYd1lHcy9TVEVuTVRDUEFLdm9cbjFaUmdwVlNXVzJFS3FQWVdTcFVLK0w3alhrRUsrNC9nb1c4REdVTzU3M3NZRnV1MWxJcEZsZlpnK2ZBV1l4MGlcbmtyMlhzZWdSRHZIanI0OG1Pd0VnMHZHdy84SEZvZFRuRmFMVGlmUk5nVWt6T3ltYklXRjV3aGNjQ1AvemoybmVcbmtUTEg5bnE0UVpyQlhrcmplWUlJNkw2NjlXdnh2eERyakVGdlFKdnorOS9TRDNTaWFqQkJJd3BYVXB5djY5L3JcbkVpK2tybTduY1l5UnJGanJwUGl2eno0MXdRTEZDREFGRHFraTlqUXZOT3lZNlJ1MUlDSU5NSmJkM3Z2dFYrcFRcbjVPMlZZQUR6Z3dJREFRQUJcbi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLSIKICAgIAljb25zdCB0ZXh0PSAiaW5pIHNheWFuZyBvbGVrIHBlIHByaXZhdGUga2V5IgogICAgLy8gRW5jcnlwdCB1c2luZyBwdWJsaWMga2V5CiAgICBjb25zdCBmcm9tU2VydmVyICAgICA9IG5ldyBOb2RlUlNBKHB1YmxpY19rZXkpOwogICAgY29uc3QgZW5jcnlwdGVkUHJpdiAgPSBmcm9tU2VydmVyLmVuY3J5cHQodGV4dCwgJ2Jhc2U2NCcpOwogICAgY29uc3QgZGF0YSAgICAgICAgICAgPSB7InBheWxvYWQiIDogZW5jcnlwdGVkUHJpdn0KICAgIAlheGlvcy5wb3N0KCJodHRwOi8vMTI3LjAuMC4xOjUwMDAvdG9rZW4vZ2VuZXJhdGUiLCBkYXRhKQogICAgCSAudGhlbihyZXNwb25zZSA9PiB7CiAgICAJIAlsZXQgaW8gPSBjbGllbnREZWNyeXB0LmRlY3J5cHQocmVzcG9uc2UuZGF0YS5pbywgJ3V0Zi04Jyk7CiAgICAJIAljb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKTsKICAgIAkgCWNvbnNvbGUubG9nKGlvKTsKICAgIAkgfSkqLwoKICAgIHZhciBkYXRhID0gbmV3IGNyeXB0bygidGVzIiwgInRlcyIpOwogICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oInByaXZhdGUiLCBwcml2YXRlcyk7CiAgICBkYXRhLmdldCgpOwogIH0KfTs="},{"version":3,"sources":["/home/skynet/Documents/MedicalChain/ANDROID/src/views/Register.vue"],"names":[],"mappings":"AA6BC,IAAM,OAAM,GAAI,OAAO,CAAC,UAAD,CAAvB;;AACA,IAAM,KAAI,GAAI,OAAO,CAAC,OAAD,CAArB;;AACA,IAAM,GAAE,GAAI,IAAI,OAAJ,CAAY;AAAC,EAAA,CAAC,EAAE;AAAJ,CAAZ,CAAZ;AACA,SAAS,MAAT,QAAuB,eAAvB;AAEA,eAAc;AACb,EAAA,IADa,kBACP;AACL,WAAM;AACL,MAAA,QAAO,EAAI;AACV,QAAA,UAAS,EAAI,EADH;AAEV,QAAA,aAAY,EAAI;AAFN;AADN,KAAN;AAMA,GARY;AASb,EAAA,OATa,qBASJ;AAER,QAAI,QAAO,GAAI,GAAG,CAAC,SAAJ,CAAc,eAAd,CAAf;AACA,QAAI,OAAM,GAAK,GAAG,CAAC,SAAJ,CAAc,cAAd,CAAf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACE;AACC;;AAIH,QAAI,IAAG,GAAI,IAAI,MAAJ,CAAW,KAAX,EAAiB,KAAjB,CAAX;AACA,IAAA,YAAY,CAAC,OAAb,CAAqB,SAArB,EAAgC,QAAhC;AACA,IAAA,IAAI,CAAC,GAAL;AACD;AAlCa,CAAd","sourcesContent":["<template>\n\t<div style=\"font-family:Inter\" class=\"mt-5\">\n\n\t\t<div class=\"mb-3 px-4\">\n\t\t\t<p class=\"text-xl font-semibold\">Formulir Pendaftaran</p>\n\t\t\t<p class=\"text-xs text-gray-500\">Silahkan mengisi data dibawah</p>\n\t\t</div>\n\n\t\t<!-- Nama Depan -->\n\t\t<ion-item>\n\t\t\t<ion-label position=\"floating\">Nama Depan</ion-label>\n\t\t\t<ion-input @IonInput=\"pengguna.nama_depan = $event.target.value\"></ion-input>\n\t\t</ion-item>\n\n\t\t<!-- Nama Belakang -->\n\t\t<ion-item>\n\t\t\t<ion-label position=\"floating\">Nama Belakang</ion-label>\n\t\t\t<ion-input @IonInput=\"pengguna.nama_belakang = $event.target.value\"></ion-input>\n\t\t</ion-item>\n\n\t\t<div class=\"px-3 mt-3\">\n\t\t\t<ion-button>Daftar</ion-button>\n\t\t</div>\n\n\t</div>\n</template>\n\n<script type=\"text/javascript\">\n\t\n\tconst NodeRSA = require('node-rsa');\n\tconst axios = require('axios');\n\tconst key = new NodeRSA({b: 512});\n\timport { crypto } from '@/function.js';\n\n\texport default{\n\t\tdata(){\n\t\t\treturn{\n\t\t\t\tpengguna : {\n\t\t\t\t\tnama_depan : \"\",\n\t\t\t\t\tnama_belakang : \"\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcreated(){\n\t\t\t\n\t\t\tlet privates = key.exportKey(\"pkcs1-private\");\n\t\t\tlet publics  = key.exportKey(\"pkcs8-public\");\n\t\t\t/*\n\t\t\tconst clientDecrypt = new NodeRSA(privates);\n\n\t\t\t// Key from server\n\t\t\tlet public_key = \"-----BEGIN PUBLIC KEY-----\\nMIICSDANBgkqhkiG9w0BAQEFAAOCAjUAMIICMAKCAicAjL9SFajgiJEPYVHEsoz8\\no/oaHeWqOPMPe78wW2zFphUWCWpAPYSOuariz+UFCB2e3aPthq1HCOU6qsWOhseO\\ngDIPe5VIXtcHdXnv353pj4anx2cuu+t6pGAEGSODZ1CA0PBJOgEeyYzsaMDmL0Q5\\n5OHxjpqI3lE4glzxjxhB45V/og6lJlYEflRCwJfF5S/9CJr+tCSjsEC9u9eVEOJY\\ndoXq2Ey14Fy+PKZUFceArlZDvnPZ+Cw7602Gyeu0xjWCxgOBvmY39cNp10mwTG6a\\nxGWYcHsnBKzupXeZhP2qXVx0+0kzffIV57ekbbtUQrnpglssANFALipFlW6e1uW1\\niKdXOCEfeIY8Fgak0TatqB1qJu5bj6vPCUui+xPqsoEvh5RtNRg2vc8dH4ED3BTO\\n+nqGte8h7rC1/g5SQa09iKKRqOa0decti4pBLUlr36b1+sXwYGs/STEnMTCPAKvo\\n1ZRgpVSWW2EKqPYWSpUK+L7jXkEK+4/goW8DGUO573sYFuu1lIpFlfZg+fAWYx0i\\nkr2XsegRDvHjr48mOwEg0vGw/8HFodTnFaLTifRNgUkzOymbIWF5whccCP/zj2ne\\nkTLH9nq4QZrBXkrjeYII6L669WvxvxDrjEFvQJvz+9/SD3SiajBBIwpXUpyv69/r\\nEi+krm7ncYyRrFjrpPivzz41wQLFCDAFDqki9jQvNOyY6Ru1ICINMJbd3vvtV+pT\\n5O2VYADzgwIDAQAB\\n-----END PUBLIC KEY-----\"\n\n\t\t\tconst text= \"ini sayang olek pe private key\"\n\t\t\t// Encrypt using public key\n\t\t\tconst fromServer     = new NodeRSA(public_key);\n\t\t\tconst encryptedPriv  = fromServer.encrypt(text, 'base64');\n\t\t\tconst data           = {\"payload\" : encryptedPriv}\n\n\t\t\taxios.post(\"http://127.0.0.1:5000/token/generate\", data)\n\t\t\t\t .then(response => {\n\t\t\t\t \tlet io = clientDecrypt.decrypt(response.data.io, 'utf-8');\n\t\t\t\t \tconsole.log(response.data);\n\t\t\t\t \tconsole.log(io);\n\t\t\t\t })*/\n\t\t\tlet data = new crypto(\"tes\",\"tes\");\n\t\t\tlocalStorage.setItem(\"private\", privates);\n\t\t\tdata.get();\n\t\t}\n\t}\n</script>"],"sourceRoot":""}]}